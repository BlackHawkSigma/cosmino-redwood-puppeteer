datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int               @id @default(autoincrement())
  name                String            @unique
  hashedPassword      String
  password            String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  userRoles           UserRolesOnUser[]
  logs                Log[]
  session             Session?

  // Settings
  showSuccessCounter Boolean @default(true)
}

model UserRole {
  id   Int               @id @default(autoincrement())
  name String            @unique
  user UserRolesOnUser[]
}

model UserRolesOnUser {
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  userRole   UserRole @relation(fields: [userRoleId], references: [id])
  userRoleId Int

  @@id([userId, userRoleId])
}

model Log {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  terminal  String
  code      String
  type      String    @default("success")
  message   String
  createdAt DateTime  @default(now())
  checkedAt DateTime?
}

model Terminal {
  name String @unique
}

model Session {
  user              User     @relation(fields: [userId], references: [id])
  userId            Int      @unique
  terminal          String
  busy              Boolean
  focused           Boolean
  lastSuccessImgUrl String?
  createdAt         DateTime @default(now())

  @@id([userId, terminal])
}
